class Menu{constructor(data){this.data=data}init(){if(this.data.options.hasOwnProperty("menu"))var menu=document.querySelector(this.data.options.menu);else var menu=document.querySelector(".menu");var opener="open--left",elementOpener,elementCloser;if(this.data.hasOwnProperty("options")){var sizes,positions,speeds;if(this.data.options.hasOwnProperty("size"))new Set(["sm","md","lg"]).has(this.data.options.size)?menu.classList.add(`menu--${this.data.options.size}`):(console.log("* * *  WARNING * * *"),console.log("You are using a measure that does not exist. By default, the size class will be large (lg)"),menu.classList.add("menu--lg"));else menu.classList.add("menu--lg");if(this.data.options.hasOwnProperty("direction"))new Set(["top","left","right","bottom"]).has(this.data.options.direction)?(menu.classList.add(`menu--to-${this.data.options.direction}`),opener=`open--${this.data.options.direction}`):(console.log("* * *  WARNING * * *"),console.log("You are using a direction that does not exist. By default, the direction class will be to left (left)"),menu.classList.add("menu--to-left"),opener="open--left");else menu.classList.add("menu--to-left"),opener="open--left";if(this.data.options.hasOwnProperty("speed"))new Set(["slow","normal","fast"]).has(this.data.options.speed)?menu.classList.add(`menu--speed-${this.data.options.speed}`):menu.style.cssText+="transition-duration:"+this.data.options.speed+" !important";else menu.classList.add("menu--speed-normal");return this.data.options.hasOwnProperty("openAndCloseWith")?(elementOpener=this.data.options.openAndCloseWith,this.openAndCloseWith(elementOpener,opener)):this.data.options.hasOwnProperty("openWith")&&this.data.options.hasOwnProperty("closeWith")?(elementOpener=this.data.options.openWith,elementCloser=this.data.options.closeWith,this.openWith(elementOpener,opener),this.closeWith(elementCloser,opener)):this.data.options.hasOwnProperty("openWith")?(elementOpener=this.data.options.openWith,this.openWith(elementOpener,opener),console.log("* * *  WARNING * * *"),console.log("You need add closeWith in the options")):this.data.options.hasOwnProperty("closeWith")&&(elementCloser=this.data.options.closeWith,this.closeWith(elementCloser,opener),console.log("* * *  WARNING * * *"),console.log("You need add openWith in the options")),this}}openWith(element,opener){var menu=document.querySelector(".menu"),element;if(element.startsWith("."))(element=document.getElementsByClassName(element.substring(1))[0]).addEventListener("click",(function handleClick(event){menu.classList.contains(opener)||menu.classList.add(opener)}));else if(element.startsWith("#")){var elementID;document.getElementById(element.substring(1)).addEventListener("click",(function handleClick(event){menu.classList.contains(opener)||menu.classList.add(opener)}))}}closeWith(element,opener){var menu=document.querySelector(".menu"),element;if(element.startsWith("."))(element=document.getElementsByClassName(element.substring(1))[0]).addEventListener("click",(function handleClick(event){menu.classList.contains(opener)&&menu.classList.remove(opener)}));else if(element.startsWith("#")){var elementID;document.getElementById(element.substring(1)).addEventListener("click",(function handleClick(event){menu.classList.contains(opener)&&menu.classList.remove(opener)}))}}openAndCloseWith(element,opener){var menu=document.querySelector(".menu");if(element.startsWith(".")){const elements=Array.from(document.getElementsByClassName(element.substring(1)));elements.forEach(element=>{element.addEventListener("click",(function handleClick(event){menu.classList.contains(opener)?menu.classList.remove(opener):menu.classList.add(opener)}))})}else if(element.startsWith("#")){const elementID=document.getElementById(element.substring(1));elementID.addEventListener("click",(function handleClick(event){menu.classList.contains(opener)?menu.classList.remove(opener):menu.classList.add(opener)}))}}}